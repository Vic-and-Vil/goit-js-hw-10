{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n    if (selected <= new Date()) {\n      startBtn.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      userSelectedDate = selected;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(input , options);\n\nstartBtn.addEventListener('click', () => {\nif (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimerDisplay(0);\n      input.disabled = false;\n      return;\n      }\n      \n    updateTimerDisplay(diff);\n  }, 1000);\n});\n\n\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  timerFields.days.textContent = addLeadingZero(days);\n  timerFields.hours.textContent = addLeadingZero(hours);\n  timerFields.minutes.textContent = addLeadingZero(minutes);\n  timerFields.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startBtn","input","userSelectedDate","options","selectedDates","selected","iziToast","flatpickr","diff"],"mappings":"sGAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EACxC,SAAS,cAAc,aAAa,EACnC,SAAS,cAAc,cAAc,EACnC,SAAS,cAAc,gBAAgB,EACvC,SAAS,cAAc,gBAAgB,EAGzD,IAAIC,EAAmB,KAGvBF,EAAS,SAAW,GAEpB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClBL,EAAS,SAAW,GACpBM,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,IAEDJ,EAAmBG,EACnBL,EAAS,SAAW,GAEvB,CACH,EAEAO,EAAUN,EAAQE,CAAO,EAEzBH,EAAS,iBAAiB,QAAS,IAAM,CACpCE,IAEHF,EAAS,SAAW,GACpBC,EAAM,SAAW,GAEjB,QAAU,YAAY,IAAM,CAE1B,MAAMO,EAAON,EADD,IAAI,KAGhB,GAAIM,GAAQ,EAAG,CACb,cAAc,OAAO,EACrB,mBAAmB,CAAC,EACpBP,EAAM,SAAW,GACjB,MACC,CAEH,mBAAmBO,CAAI,CACxB,EAAE,GAAI,EACT,CAAC"}